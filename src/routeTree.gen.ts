/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ApiVideosRouteImport } from './routes/api/videos'
import { Route as ApiPlaylistsRouteImport } from './routes/api/playlists'
import { Route as AuthDiscordRouteRouteImport } from './routes/auth/discord/route'
import { Route as AuthDiscordCallbackRouteImport } from './routes/auth/discord/callback'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiVideosRoute = ApiVideosRouteImport.update({
  id: '/api/videos',
  path: '/api/videos',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiPlaylistsRoute = ApiPlaylistsRouteImport.update({
  id: '/api/playlists',
  path: '/api/playlists',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthDiscordRouteRoute = AuthDiscordRouteRouteImport.update({
  id: '/auth/discord',
  path: '/auth/discord',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthDiscordCallbackRoute = AuthDiscordCallbackRouteImport.update({
  id: '/callback',
  path: '/callback',
  getParentRoute: () => AuthDiscordRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth/discord': typeof AuthDiscordRouteRouteWithChildren
  '/api/playlists': typeof ApiPlaylistsRoute
  '/api/videos': typeof ApiVideosRoute
  '/auth/discord/callback': typeof AuthDiscordCallbackRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth/discord': typeof AuthDiscordRouteRouteWithChildren
  '/api/playlists': typeof ApiPlaylistsRoute
  '/api/videos': typeof ApiVideosRoute
  '/auth/discord/callback': typeof AuthDiscordCallbackRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/auth/discord': typeof AuthDiscordRouteRouteWithChildren
  '/api/playlists': typeof ApiPlaylistsRoute
  '/api/videos': typeof ApiVideosRoute
  '/auth/discord/callback': typeof AuthDiscordCallbackRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth/discord'
    | '/api/playlists'
    | '/api/videos'
    | '/auth/discord/callback'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth/discord'
    | '/api/playlists'
    | '/api/videos'
    | '/auth/discord/callback'
  id:
    | '__root__'
    | '/'
    | '/auth/discord'
    | '/api/playlists'
    | '/api/videos'
    | '/auth/discord/callback'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthDiscordRouteRoute: typeof AuthDiscordRouteRouteWithChildren
  ApiPlaylistsRoute: typeof ApiPlaylistsRoute
  ApiVideosRoute: typeof ApiVideosRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/videos': {
      id: '/api/videos'
      path: '/api/videos'
      fullPath: '/api/videos'
      preLoaderRoute: typeof ApiVideosRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/playlists': {
      id: '/api/playlists'
      path: '/api/playlists'
      fullPath: '/api/playlists'
      preLoaderRoute: typeof ApiPlaylistsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/discord': {
      id: '/auth/discord'
      path: '/auth/discord'
      fullPath: '/auth/discord'
      preLoaderRoute: typeof AuthDiscordRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/discord/callback': {
      id: '/auth/discord/callback'
      path: '/callback'
      fullPath: '/auth/discord/callback'
      preLoaderRoute: typeof AuthDiscordCallbackRouteImport
      parentRoute: typeof AuthDiscordRouteRoute
    }
  }
}

interface AuthDiscordRouteRouteChildren {
  AuthDiscordCallbackRoute: typeof AuthDiscordCallbackRoute
}

const AuthDiscordRouteRouteChildren: AuthDiscordRouteRouteChildren = {
  AuthDiscordCallbackRoute: AuthDiscordCallbackRoute,
}

const AuthDiscordRouteRouteWithChildren =
  AuthDiscordRouteRoute._addFileChildren(AuthDiscordRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthDiscordRouteRoute: AuthDiscordRouteRouteWithChildren,
  ApiPlaylistsRoute: ApiPlaylistsRoute,
  ApiVideosRoute: ApiVideosRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
